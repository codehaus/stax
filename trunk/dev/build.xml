<!-- The ANT build script for StAX reference implementation
   -
  -->
<project name="stax" default="run">

  <!-- for details see src/build.xml -->

  <!-- Ref. impl properties -->
  <property name="version" value="1.2.0_rc2"/>
  <property name="build_dir" value="build"/>
  <property name="class_dir" value="${build_dir}/classes"/>
  <property name="javadoc_dir" value="${build_dir}/javadoc"/>
  <property name="jar_ri" value="${build_dir}/stax-${version}-dev.jar"/>
  <property name="jar_src" value="${build_dir}/stax-src-${version}-dev.zip"/>  
  <property name="src" value="src"/>
  <property name="topdirs" value="com/bea/xml/stream/*.java,
                                       com/wutka/dtd/*.java,
                                       com/bea/xml/stream/samples/*.java,
                                       com/bea/xml/stream/util/*.java,
                                       com/bea/xml/stream/filters/*.java,
                                       com/bea/xml/stream/reader/*.java,
                                       com/bea/xml/stream/events/*.java"
  />

  <!-- API properties -->
  <property name="api_version" value="1.0.1"/>
  <property name="api_src_dir" value="${build_dir}/api_src"/>
  <property name="api_dir" value="api"/>
  <property name="jar_api" value="${build_dir}/stax-api-${api_version}.jar"/>
  <property name="src_api" value="src"/>
  <property name="api_dirs" value="javax/xml/*.java,
                    javax/xml/namespace/*.java,
  					javax/xml/stream/**/*.java"/>

  <!-- Unit test (StaxTest) package properties -->
  <property name="test_version" value="0.9"/>
  <property name="test_class_dir" value="${build_dir}/test-classes"/>
  <property name="test_results_dir" value="${build_dir}/test-results"/>
  <property name="test_jar" value="staxtest_${test_version}.jar"/>
  <property name="test_src_jar" value="staxtest_${test_version}_src.jar"/>

  <property name="lib" value="lib"/>

  <path id="junit_libraries">
        <fileset dir="${lib}">
            <include name="junit/junit*.jar" />
        </fileset>
  </path>

  <path id="test_classpath">
        <path refid="junit_libraries" />
        <pathelement path="${test_class_dir}" />
        <!-- This is enough to get both API and RI classes: -->
        <pathelement path="${class_dir}" />
  </path>

  <target name="all" depends="clean,build,ri_jar,run"/>
  <target name="clean">
    <delete dir="${build_dir}"/>
  </target>

  <!-- Common initializations -->
  <target name="init">
    <mkdir dir="${build_dir}"/>
    <mkdir dir="${class_dir}"/>
    <mkdir dir="${javadoc_dir}"/>
  </target>

  <!-- Target for building API classes from sources -->
  <target name="api" depends="init">
    <!--mkdir dir="${api_src_dir}"/-->
    <!--unjar src="${jar_api}" dest="${class_dir}"/-->
    <javac srcdir="${src_api}"
      source="1.2" target="1.2"
      includes="${api_dirs}"
      destdir="${class_dir}"
      debug="true">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${class_dir}"/>
      </classpath>
    </javac>
    

    <jar jarfile="${jar_api}">
      <!-- Let's add bit more information into jar... like version -->
      <manifest>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title"   value="StAX"/>
            <attribute name="Specification-Version" value="${api_version}"/>
            <attribute name="Specification-Vendor"  value="JCP-173"/>
            <attribute name="Implementation-Title"   value="StAX 1.0 API"/>
            <attribute name="Implementation-Version" value="${api_version}"/>
            <attribute name="Implementation-Vendor"  value="JCP"/>
      </manifest>
      <fileset dir="${class_dir}"
        includes=
        "javax/xml/
        "/>
    </jar>

  </target>

  <!-- Main Ref. Impl. compilation: -->
  <target name="compile" depends="init,api">
    <!--javac srcdir="${src}:${api_src_dir}"-->
    <javac srcdir="${src}"
      source="1.2" target="1.2"
      includes="${topdirs}"
      destdir="${class_dir}"
      debug="true">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${class_dir}"/>
      </classpath>
    </javac>
  </target>

  <target name="samples" depends="compile">
    <!--javac srcdir="${src}:${api_src_dir}"-->
    <javac srcdir="${src}" source="1.2" target="1.2"
      destdir="${class_dir}" debug="true">
      <include name="samples/*.java" />
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${class_dir}"/>
      </classpath>
    </javac>
  </target>

  <!-- Targets for compiling StaxTest classes
    -->
  <target name="test_init">
    <mkdir dir="${test_class_dir}"/>
    <mkdir dir="${test_results_dir}"/>
    <mkdir dir="${test_results_dir}/xml"/>
  </target>
  <target name="test_compile" depends="api, test_init">
    <javac srcdir="${src}" includes="org/codehaus/stax/test/**/*.java"
      source="1.2" target="1.2"
      destdir="${test_class_dir}"
      debug="true">
      <classpath>
        <pathelement path="${class_dir}" />
        <path refid="junit_libraries"/>
      </classpath>
    </javac>
  </target>

  <!-- Targets for building distributable files (API, ref. impl.,
     - javadocs, test suite)
    -->

  <target name="dist" depends="compile,ri_src_dist,ri_bin_dist" />

  <!-- Ref. Impl. "binary" -->
  <target name="ri_jar" depends="ri_bin_dist" />

  <target name="ri_bin_dist" depends="compile">
    <jar jarfile="${jar_ri}">
      <!-- Let's add bit more information into jar... like version -->
      <manifest>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title"   value="StAX"/>
            <attribute name="Specification-Version" value="${api_version}"/>
            <attribute name="Specification-Vendor"  value="JCP-173"/>
            <attribute name="Implementation-Title"   value="StAX reference implementation"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-Vendor"  value="BEA"/>
      </manifest>
      <fileset dir="${class_dir}"
        includes=
        "com/wutka/dtd/,
         com/bea/xml/stream/,
         com/bea/xml/stream/samples/,
         com/bea/xml/stream/util/,
         com/bea/xml/stream/filters/,
         com/bea/xml/stream/reader/,
         com/bea/xml/stream/events/"/>
    </jar>
  </target>

  <!-- Package the source code of the ref. impl -->
  <target name="ri_src_jar" depends="dist" />
  <target name="src_dist" depends="dist" />

  <target name="ri_src_dist">
    <jar jarfile="${jar_src}">
      <fileset dir="."
        includes=
        "${src}/com/wutka/dtd/,
         ${src}/com/bea/xml/stream/,
         ${src}/com/bea/xml/stream/samples/,
         ${src}/com/bea/xml/stream/util/,
         ${src}/com/bea/xml/stream/filters/,
         ${src}/com/bea/xml/stream/reader/,
         ${src}/com/bea/xml/stream/events/,
         ${src}/javax/**,
         ${src}/samples/**,
         ${src}/test/**"/>
      <fileset dir="."
        includes=
        "build.xml,
         ASF2.0.txt"/>
    </jar>
  </target>

  <!-- Javadocs for the ref. impl. -->
  <target name="javadoc" depends="init">
    <!-- Build a dirpath that contains just the "source" tree -->
    <javadoc windowtitle="${ProjectName}"
         destdir="${javadoc_dir}" author="true"  version="true">
      <packageset dir="${src}" defaultexcludes="yes">
        <include name="com/bea/**" />
      </packageset>
    </javadoc>
  </target> 

  <!-- Package the test suite jar, usable by other implementations -->
  <target name="test_jar" depends="test_compile">
    <jar jarfile="${test_jar}">
      <manifest>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title"   value="StAX"/>
            <attribute name="Specification-Version" value="${api_version}"/>
            <attribute name="Specification-Vendor"  value="JCP-173"/>
            <attribute name="Implementation-Title"   value="StaxTest test suite" />
            <attribute name="Implementation-Version" value="${test_version}"/>
            <attribute name="Implementation-Vendor"  value="Codehaus"/>
      </manifest>
      <fileset dir="${test_class_dir}" includes="org/codehaus/stax/test/" />
    </jar>
  </target>

  <!-- And test suite sources -->
  <target name="test_src_jar">
    <jar jarfile="${test_src_jar}">
      <fileset dir="${src}" includes="org/codehaus/stax/test/" />
    </jar>
  </target>

  <!-- Targets that run things like unit tests
    -->

  <target name="build" depends="compile"/>
  <target name="run" depends="build">
    <java classname="com.bea.xml.stream.samples.EventParse" fork="true">
      <arg line="src/test/files/test.xml"/>
      <classpath>
        <pathelement path="${class_dir}"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
    </java>
  </target>

  <!-- By default, let's only run "non-validating" test case, since
     - RI doesn't implement validation, and it's easier to control it
     - here than having all validation unit tests check for support
    -->

  <target name="test" depends="test_core" />

  <target name="test_all" depends="test_core, test_validation" />

  <!-- Core includes tests for other StAX 1.0 features except for DTD
     - validation (which is optional)
    -->
  <target name="test_core" depends="compile, test_compile">
    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
            <batchtest fork="no" todir="${test_results_dir}/xml">
                <fileset dir="${test_class_dir}">
                    <!-- Need to exclude inner classes... -->
                    <exclude name="**/*$*.class"/>
                    <exclude name="org/codehaus/stax/test/vstream/*.class"/>
                    <include name="org/codehaus/stax/test/**/Test*.class"/>
                </fileset>
            </batchtest>
            <formatter type="xml" />
            <classpath refid="test_classpath" />
     </junit>
     <junitreport todir="${test_results_dir}">
            <fileset dir="${test_results_dir}/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test_results_dir}" />
     </junitreport>
  </target>

  <target name="test_validation" depends="compile, test_compile">
    <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes">
            <batchtest fork="no" todir="${test_results_dir}/xml">
                <fileset dir="${test_class_dir}">
                    <include name="org/codehaus/stax/test/vstream/Test*.class"/>
                </fileset>
            </batchtest>
            <formatter type="xml" />
            <classpath refid="test_classpath" />
     </junit>
     <junitreport todir="${test_results_dir}">
            <fileset dir="${test_results_dir}/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test_results_dir}" />
     </junitreport>
  </target>

</project>
